# Coleur du cercle noire par d√©faut 
# Manuel ou Auto 
# Rayon 



#----------- Making a .exe file -------------#
# Open cmd in the Python file directory
# pyinstaller.exe --onefile --incon=WindyLogoV1.ico main.py

from selenium import webdriver
import time
import functions as fn
import socket 
# import simplekml
# import math
# import matplotlib.pyplot as plt
# import os
# import selenium



print("Initialization :")
browser = webdriver.Chrome('C:\\Windows\chromedriver.exe')  # Directory of the Chrome Driver (Chrome Version 94)
                                                            # Go to Chrome, Top right 3 dots, Help, About Google Chrome
browser.maximize_window()                                   # Open Window in Full Screen
browser.get('https://www.windy.com/uploader')               # Open Windy

time.sleep(6)
fn.clear()                                                  # Removing the error message generated by the Chrome Driver 


#----------------------------------------------- Additional Variables -------------------------------------------------#

N = 36      # Number of points that define the circle
reset = 0   # Variable used in the while loop
x = 0       # Variable used in the while loop 

#----------------------------------------------- Initiate the While Loop -------------------------------------------------#

try:
    while True:

        if x == 0:
            x = 1
            #---------------------------- Setting up the user input variables ---------------------------------#

            radius = fn.radiusInput()                   # Outer radius of the donut (user input)
            innerRadius = 300                           # Inner Radius of the donut (not a user input)
            circleColor = 'ff000000'                    # Dark Outer Circle by default 
            autoOrManual = fn.autoOrManualFunc()        # User Manual or Auto selection function 
            sleepTime = fn.sleepInput(autoOrManual)     # User Sleep time selection function 

            #---------------------------- Local IP and Port for UDP communication -----------------------------------#

            hostname = socket.gethostname()                         # Utilizing the Python Socket package 
            ip = socket.gethostbyname(hostname)                     # Automatically retrieve the IP address of the computer
            port = 504                                              # Can be any port 
            print(f'Listening to IP:{ip} UDP Port:{port} \n')



        if x == 1:
            x = 2                                         # allows to transition to the next if statement             

            stringGPRMC = fn.receiveUDP(ip,port)          # Retrieving the GPS NMEA0183 sentence (GPRMC) via UDP

            dictGPRMC = fn.decodeGPRMC(stringGPRMC)       # Seperating the GPRMC sentence by elements in a dictionary 

            decodedData = fn.decodeLonLat(dictGPRMC["Lon"],dictGPRMC["Lat"],dictGPRMC["lonDir"],dictGPRMC["latDir"]) # Converting the Longitude and Latitude from DDMM.mm to dd
            decodedData["Date"] = fn.date2utc(dictGPRMC["dateStamp"])                                                # Decoding the date
            decodedData["Time"] = fn.time2utc(dictGPRMC["timeStamp"])                                                # Decoding the time

            fn.printDecodedData(decodedData)

            
        if x == 2:
            x = 1                                         # Allows to transition to the next if statement      

            circleCoord = fn.circleCoord(radius,N,float(decodedData["Latitude"]),float(decodedData["Longitude"]))           # Creating the outer circle 
            smallCircleCoord = fn.circleCoord(innerRadius,N,float(decodedData["Latitude"]),float(decodedData["Longitude"])) # Creating the inner circle 
            fn.kmlPolygonGenerator(circleColor,circleCoord,smallCircleCoord)                                                # Generating the kml file
            x = fn.seleniumWindy(browser,reset,autoOrManual,sleepTime)                                                      # Importing the kml file to Windy using Selenium 
            fn.clear()    
        
            
except KeyboardInterrupt:
    print("Press Ctrl-C to terminate while statement")   
    pass
            

